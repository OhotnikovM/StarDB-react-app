{"version":3,"sources":["components/error-indicator/deathStar.png","components/header/index.js","components/header/header.js","services/swapi-service.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/spinner/index.js","components/spinner/spinner.js","components/random-planet/random-planet.js","components/random-planet/index.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","components/item-details/item-details.js","components/item-details/index.js","components/swapi-service-context/swapi-service-context.js","components/sw-components/details.js","components/item-list/index.js","components/item-list/item-list.js","components/hoc-helpers/with-data.js","components/sw-components/item-lists.js","components/row/index.js","components/row/row.js","components/pages/people-page.js","components/pages/planets-page.js","components/pages/starships-page.js","components/pages/login-page.js","components/pages/secret-page.js","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","Header","className","to","SwapiService","_apiBase","_imageBase","getResource","url","a","fetch","res","ok","Error","status","json","getAllPeople","results","map","_transformPerson","slice","getPerson","id","person","getAllPlanets","_transformPlanet","getPlanet","planet","getAllStarships","_transformStarship","getStarship","starship","getPersonImage","getStarshipImage","getPlanetImage","_extractId","item","match","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","cost_in_credits","length","crew","passengers","cargoCapacity","cargo_capacity","gender","birthYear","birth_year","eyeColor","eye_color","ErrorIndicator","src","icon","alt","Spinner","RandomPlanet","swapiService","state","loading","error","onPlanetLoaded","setState","onError","err","updatePlanet","Math","floor","random","then","catch","updateInterval","this","props","interval","setInterval","clearInterval","hasData","errorMessage","spinner","content","Component","defaultProps","PlanetView","Fragment","ErrorBoundry","hasError","children","Record","field","label","ItemDetails","image","updateItem","prevProps","itemId","getData","getImageUrl","React","Children","child","cloneElement","createContext","SwapiServiceProvider","Provider","SwapiServiceConsumer","Consumer","PersonDetails","PlanetDetails","StarshipDetails","ItemList","data","onItemSelected","renderLabel","items","key","onClick","withData","View","update","withChildFunction","Wrapped","fn","renderName","PersonList","PlanetList","StarshipList","Row","left","right","withRouter","history","params","push","PlanetsPage","selectedItem","LoginPage","isLoggedIn","onLogin","SecretPage","App","value","path","render","exact","component","PeoplePage","StarshipsPage","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5270f1b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/deathStar.5733d356.png\";","import Header from './header';\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './header.css';\n\nconst Header = () => {\n  return (\n    <div className=\"header d-flex\">\n      <h3>\n        <Link to=\"/\">\n          Star DB\n          </ Link>\n      </h3>\n      <ul className=\"d-flex\">\n        <li>\n          <Link to=\"/people/\">People</Link>\n        </li>\n        <li>\n          <Link to=\"/planets/\">Planets</Link>\n        </li>\n        <li>\n          <Link to=\"/starships/\">Starships</Link>\n        </li>\n         <li>\n          <Link to=\"/login\">Login</Link>\n        </li>\n         <li>\n          <Link to=\"/secret\">Secret</Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Header;","export default class SwapiService {\n\n  _apiBase = 'https://swapi.co/api';\n  _imageBase = 'https://starwars-visualguide.com/assets/img';\n\n  getResource = async (url) => {\n    const res = await fetch(`${this._apiBase}${url}`);\n\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${url}` +\n        `, received ${res.status}`)\n    }\n    return await res.json();\n  };\n\n  getAllPeople = async () => {\n    const res = await this.getResource(`/people/`);\n    return res.results\n      .map(this._transformPerson)\n      .slice(0, 7);\n  };\n\n  getPerson = async (id) => {\n    const person = await this.getResource(`/people/${id}/`);\n    return this._transformPerson(person);\n  };\n\n  getAllPlanets = async () => {\n    const res = await this.getResource(`/planets/`);\n    return res.results\n      .map(this._transformPlanet)\n      .slice(0, 7);\n  };\n\n  getPlanet = async (id) => {\n    const planet = await this.getResource(`/planets/${id}/`);\n    return this._transformPlanet(planet);\n  };\n\n  getAllStarships = async () => {\n    const res = await this.getResource(`/starships/`);\n    return res.results\n      .map(this._transformStarship)\n      .slice(0, 7);\n  };\n\n  getStarship = async (id) => {\n    const starship = await this.getResource(`/starships/${id}/`);\n    return this._transformStarship(starship);\n  };\n\n  getPersonImage = ({id}) => {\n    return `${this._imageBase}/characters/${id}.jpg`\n  };\n\n  getStarshipImage = ({id}) => {\n    return `${this._imageBase}/starships/${id}.jpg`\n  };\n\n  getPlanetImage = ({id}) => {\n    return `${this._imageBase}/planets/${id}.jpg`\n  };\n\n  _extractId = (item) => {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n    return item.url.match(idRegExp)[1];\n  };\n\n  _transformPlanet = (planet) => {\n    return {\n      id: this._extractId(planet),\n      name: planet.name,\n      population: planet.population,\n      rotationPeriod: planet.rotation_period,\n      diameter: planet.diameter\n    };\n  };\n\n  _transformStarship = (starship) => {\n    return {\n      id: this._extractId(starship),\n      name: starship.name,\n      model: starship.model,\n      manufacturer: starship.manufacturer,\n      costInCredits: starship.cost_in_credits,\n      length: starship.length,\n      crew: starship.crew,\n      passengers: starship.passengers,\n      cargoCapacity: starship.cargo_capacity\n    }\n  };\n\n  _transformPerson = (person) => {\n    return {\n      id: this._extractId(person),\n      name: person.name,\n      gender: person.gender,\n      birthYear: person.birth_year,\n      eyeColor: person.eye_color\n    }\n  }\n}","import ErrorIndicator from './error-indicator';\n\nexport default ErrorIndicator;","import React from 'react';\n\nimport './error-indicator.css';\nimport icon from './deathStar.png';\n\nconst ErrorIndicator = () => {\n\treturn (\n\t\t<div className=\"error-indicator\">\n\t\t<img src={icon} alt=\"error-icon\"/>\n\t\t<span className=\"boom\">BOOM!</span>\n\t\t<span>\n\t\tsomething has gone terribly wrong\n\t\t</span>\n\t\t<span>\n\t\t(but we already sent droids to fix it)\n\t\t</span>\n\t\t</div>\n\t\t);\n};\n\nexport default ErrorIndicator;","import Spinner from './spinner';\n\nexport default Spinner;","import React from 'react';\n\nimport './spinner.css';\n\nconst Spinner = () => {\n\treturn (\n\t\t<div className=\"lds-css ng-scope\">\n  \t\t\t<div className=\"lds-double-ring\">\n  \t\t\t<div></div>\n  \t\t\t<div></div>\n  \t\t\t</div>\n  \t\t\t</div>\n\n\t\t);\n};\n\nexport default Spinner;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SwapiService from '../../services/swapi-service';\nimport ErrorIndicator from '../error-indicator';\nimport Spinner from '../spinner';\n\nimport './random-planet.css';\n\nexport default class RandomPlanet extends Component {\n\n\n  static defaultProps = {\n     updateInterval: 10000\n   }; \n\n   static propTypes = {\n     updateInterval: PropTypes.number\n   };\n\n\n  swapiService = new SwapiService();\n\n  state = {\n    planet: {},\n    loading: true,\n     error: false\n  };\n\n\n  componentDidMount() {\n    const { updateInterval } = this.props;\n    this.updatePlanet();\n    this.interval = setInterval(this.updatePlanet, updateInterval);\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n\n  onPlanetLoaded = (planet) => {\n    this.setState({\n      planet,\n      loading: false,\n       error: false\n    });\n  };\n\n  onError = (err) => {\n    this.setState({\n      error: true,\n      loading: false\n    });\n  };\n \n  updatePlanet = () => {\n    const id = Math.floor(Math.random()*25) + 3;\n    this.swapiService.getPlanet(id)\n        .then(this.onPlanetLoaded)\n        .catch(this.onError);    \n  }\n\n  render() {\n\n    const { planet, loading, error } = this.state;\n\n    const hasData = !(loading || error);\n\n    const errorMessage = error ? <ErrorIndicator /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = hasData ? <PlanetView planet={planet}/> : null;\n\n    return (\n        <div className=\"random-planet jumbotron rounded\">\n        {errorMessage}\n        {spinner}\n        {content}\n        </div>\n    );\n  }\n\n}\n\n   \n  const PlanetView = ({ planet }) => {\n\n      const { \n      id, \n      name,\n      population,\n      rotationPeriod,\n      diameter } = planet;\n\n\n    return (\n      <React.Fragment>\n  <img className=\"planet-image\"\n             src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} />\n        <div>\n          <h4>{name}</h4>\n          <ul className=\"list-group list-group-flush\">\n            <li className=\"list-group-item\">\n              <span className=\"term\">Population</span>\n              <span>{population}</span>\n            </li>\n            <li className=\"list-group-item\">\n              <span className=\"term\">Rotation Period</span>\n              <span>{rotationPeriod}</span>\n            </li>\n            <li className=\"list-group-item\">\n              <span className=\"term\">Diameter</span>\n              <span>{diameter}</span>\n            </li>\n          </ul>\n        </div>\n      </React.Fragment>\n      );\n  }\n\n","import RandomPlanet from './random-planet';\n\nexport default RandomPlanet;","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;","import React, { Component } from 'react';\n\nimport ErrorIndicator from '../error-indicator';\n\nimport './error-boundry.css';\n\n\nexport default class ErrorBoundry extends Component {\n\n\tstate = {\n\t\thasError: false\n\t};\n\n\tcomponentDidCatch() {\n\n\tthis.setState({\n\t\thasError: true\n\t});\n}\n\n\trender() {\n\n\t\tif (this.state.hasError) {\n\t\t\treturn <ErrorIndicator />\n\t\t}\n\t\treturn this.props.children;\n\t}\n};\n\n","import React, { Component } from 'react';\n\n\nimport './item-details.css';\n\nconst Record = ({ item, field, label }) => {\n  return (\n    <li className=\"list-group-item\">\n      <span className=\"term\">{label}</span>\n      <span>{ item[field] }</span>\n    </li>\n  );\n};\n\nexport {\n  Record\n};\n\n\nexport default class ItemDetails extends Component {\n\n  state = {\n    item: null,\n    image: null\n  };\n\n  componentDidMount() {\n    this.updateItem();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.itemId !== prevProps.itemId) {\n      this.updateItem();\n    }\n  }\n\n  updateItem() {\n    const { itemId, getData, getImageUrl } = this.props;\n    if (!itemId) {\n      return;\n    }\n\n    getData(itemId)\n      .then((item) => {\n        this.setState({\n          item,\n          image: getImageUrl(item)\n        });\n      });\n  }\n\n  render() {\n\n    const { item, image } = this.state;\n    if (!item) {\n      return <span>Select a item from a list</span>;\n    }\n\n    const { name } = item;\n\n    return (\n      <div className=\"item-details card\">\n        <img className=\"item-image\"\n          src={image}\n          alt=\"item\"/>\n\n        <div className=\"card-body\">\n          <h4>{name}</h4>\n          <ul className=\"list-group list-group-flush\">\n            {\n              React.Children.map(this.props.children, (child) => {\n                return React.cloneElement(child, { item });\n              })\n            }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}","import ItemDetails, { Record } from './item-details';\n\nexport default ItemDetails;\n\nexport { Record };","import React from 'react';\n\n\nconst {\n\t Provider: SwapiServiceProvider, \n\t Consumer: SwapiServiceConsumer\n } = React.createContext();\n\n\n export {\n \tSwapiServiceProvider,\n\tSwapiServiceConsumer\n };","import React from 'react';\n\nimport ItemDetails, { Record } from '../item-details';\n\nimport { SwapiServiceConsumer } from '../swapi-service-context';\n\n\nconst PersonDetails = ({ itemId }) => {\n\n\treturn (\n         <SwapiServiceConsumer>\n\t{\n                ({getPerson, getPersonImage}) => {\n                        return (\n        <ItemDetails \n        itemId={itemId} \n        getData={getPerson}\n        getImageUrl={getPersonImage}>\n\n         <Record field=\"gender\" label=\"Gender\" />\n         <Record field=\"eyeColor\" label=\"Eye Color\" />\n\n         </ItemDetails>\n         );\n     }\n  }\n         </ SwapiServiceConsumer>\n\t\t);\n\n};\n\nconst PlanetDetails = ({ itemId }) => {\n\treturn (\n         <SwapiServiceConsumer>\n\t{\n                ({getPlanet, getPlanetImage}) => {\n                        return (\n         <ItemDetails \n         itemId={itemId}\n         getData={ getPlanet}\n         getImageUrl={getPlanetImage}>\n\n        <Record field=\"population\" label=\"Population\" />\n        <Record field=\"rotationPeriod\" label=\"Rotation Period\" />\n        <Record field=\"diameter\" label=\"Diameter\" />\n\n         </ ItemDetails>\n         );\n   }\n}\n         </ SwapiServiceConsumer>\n\t);\n\n};\n\nconst StarshipDetails = ({ itemId }) => {\n\t\treturn (\n         <SwapiServiceConsumer>\n         {\n                 ({getStarship, getStarshipImage}) => {\n                         return (\n         <ItemDetails \n         itemId={itemId}\n         getData={ getStarship}\n         getImageUrl={getStarshipImage}>\n\n        <Record field=\"model\" label=\"Model\" />\n        <Record field=\"length\" label=\"Length\" />\n        <Record field=\"costInCredits\" label=\"Cost\" />\n\n         </ ItemDetails>\n         );\n      }\n}\n         </ SwapiServiceConsumer>\n         );\n };\n\t\n\nexport {\n\tPersonDetails,\n\tPlanetDetails,\n\tStarshipDetails\n};","import ItemList from './item-list';\n\nexport default ItemList;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './item-list.css';\n\nconst ItemList = (props) => {\n\n  const { data, onItemSelected, children: renderLabel } = props;\n\n  const items = data.map((item) => {\n    const { id } = item;\n    const label = renderLabel(item);\n\n    return (\n      <li className=\"list-group-item\"\n          key={id}\n          onClick={() => onItemSelected(id)}>\n        {label}\n      </li>\n    );\n  });\n\n  return (\n    <ul className=\"item-list list-group\">\n      {items}\n    </ul>\n  );\n\n  ItemList.defaultProps = {\n    onItemSelected: () => {}\n  };\n\n  ItemList.propTypes = {\n     onItemSelected: PropTypes.func,\n     data: PropTypes.arrayOf(PropTypes.object).isRequired,\n     children: PropTypes.func.isRequired\n  };\n  \n};\n\n\n\nexport default ItemList;","import React, { Component } from 'react';\n\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\n\n\nconst withData = (View, getData) => {\n  return class extends Component {\n\n    state = {\n    data: null,\n    loading: true,\n    error:  false\n  };\n\n  componentDidMount() {\n    this.update();\n  \n  }\n\n    update() {\n      this.setState({\n        loading: true,\n        error: false\n      });\n\n      getData()\n      .then((data) => {\n        this.setState({\n          data,\n          loading: false\n        });\n      })\n        .catch(() => {\n          this.setState({\n            error: true,\n            loading: false\n          })\n        })\n\n    }\n\n    render() {\n      const { data, loading, error } = this.state;\n\n      if (loading) {\n      return <Spinner />;\n    }\n\n      if (error) {\n        return <ErrorIndicator />\n      }\n\n      return <View {...this.props} data={data}/>;\n    }\n  };\n};\n\nexport default withData;","import React from 'react';\nimport ItemList from '../item-list';\nimport { withData } from '../hoc-helpers';\nimport SwapiService from '../../services/swapi-service';\n\nconst swapiService = new SwapiService();\n\nconst {\n  getAllPeople,\n  getAllStarships,\n  getAllPlanets\n} = swapiService;\n\nconst withChildFunction = (Wrapped, fn) => {\n  return (props) => {\n    return (\n      <Wrapped {...props}>\n        {fn}\n      </Wrapped>\n    )\n  };\n};\n\nconst renderName = ({ name }) => <span>{name}</span>;\nconst renderModelAndName = ({ model, name}) => <span>{name} ({model})</span>;\n\nconst PersonList = withData(\n                      withChildFunction(ItemList, renderName),\n                      getAllPeople);\n\nconst PlanetList = withData(\n                      withChildFunction(ItemList, renderName),\n                      getAllPlanets);\n\nconst StarshipList = withData(\n                      withChildFunction(ItemList, renderModelAndName),\n                      getAllStarships);\n\nexport {\n  PersonList,\n  PlanetList,\n  StarshipList\n};","import Row from './row';\n\nexport default Row;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './row.css';\n\nconst Row = ({ left, right }) => {\n  return (\n    <div className=\"row mb2\">\n      <div className=\"col-md-6\">\n        {left}\n      </div>\n      <div className=\"col-md-6\">\n        {right}\n      </div>\n    </div>\n  );\n};\n\nRow.propTypes = {\n  left: PropTypes.node,\n  right: PropTypes.node\n};\n\nexport default Row;","import React from 'react';\nimport {PersonDetails, PersonList} from '../sw-components';\nimport Row from '../row';\nimport { withRouter } from 'react-router-dom';\n\n\n\nconst PeoplePage = ({ history, match }) => {\n\n\t\tconst { id } = match.params;\n\n\treturn (\n\t\t\t<Row\n\t\t\t left={<PersonList onItemSelected={(id) => history.push(id)} />}\n\t\t\t right={<PersonDetails itemId={id} />} />\n );\n}\n\n\nexport default withRouter(PeoplePage);\n\n\n","import React, { Component } from 'react';\nimport {PlanetDetails, PlanetList} from '../sw-components';\nimport Row from '../row';\n\n\nexport default class PlanetsPage extends Component {\n\n\tstate = {\n\t\tselectedItem: null\n\t};\n\n\tonItemSelected = (selectedItem) => {\n\t\tthis.setState({selectedItem})\n\t};\n\n\trender() {\n\t\tconst { selectedItem } = this.state;\n\n\t\treturn (\n\t\t\t<Row\n\t\t\t left={<PlanetList onItemSelected={this.onItemSelected} />}\n\t\t\t right={<PlanetDetails itemId={selectedItem} />} />\n\t\t\t);\n\t}\n}\n\n","import React from 'react';\nimport {StarshipList} from '../sw-components';\nimport { withRouter } from 'react-router-dom';\n\n\n const StarshipsPage = ({ history }) => {\n \treturn (\n \t\t<StarshipList onItemSelected={(id) => {\n \t\t\thistory.push(id);\n \t\t} }/>\n \t);\n };\n\n\n\nexport default withRouter(StarshipsPage);","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst LoginPage = ({ isLoggedIn, onLogin }) => {\n\n\tif (isLoggedIn) {\n\t\treturn \t<Redirect to=\"/\" />;\n\t}\n\t\n\treturn (\n\t\t<div className=\"jumbotron\">\n\t\t\t<p>Login to see secret page!</p>\n\t\t\t<button\n\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\tonClick={onLogin}>\n\t\t\t\tLogin\n\t\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default LoginPage;"," import React from 'react';\n import { Redirect } from 'react-router-dom';\n\n const SecretPage = ({ isLoggedIn }) => {\n\n \tif(isLoggedIn) {\n \t\treturn (\n \t\t\t<div className=\"jumbotron text-center\">\n \t\t\t\t<h3>This page is full of secrets!!!</h3>\n \t\t\t</div>\n \t\t);\n \t}\n\n \treturn <Redirect to=\"/login\" />;\n\n };\n\n export default SecretPage;","import App from './app';\n\nexport default App;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, \n         Route, Switch, Redirect } from 'react-router-dom';\n\n\nimport Header from '../header';\nimport RandomPlanet from '../random-planet';\n\nimport ErrorIndicator from '../error-indicator';\nimport ErrorBoundry from '../error-boundry';\n\nimport {PeoplePage, \n        PlanetsPage, \n        StarshipsPage, \n        LoginPage, \n        SecretPage} from '../pages';\n\nimport {PersonDetails, PlanetDetails, StarshipDetails} from '../sw-components';\n\n\nimport SwapiService from '../../services/swapi-service';\nimport { SwapiServiceProvider } from '../swapi-service-context';\n\nimport './app.css';\n\n\nexport default class App extends Component {\n\n\n swapiService = new SwapiService();\n\n\n  state = {\n    hasError: false,\n    isLoggedIn: false\n  };\n\n  onLogin = () => {\n    this.setState({\n      isLoggedIn: true\n    });\n  };\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n  \n  render() {\n\n    if (this.state.hasError) {\n      return <ErrorIndicator />\n    }\n    const { isLoggedIn } = this.state;\n\n    return (\n      <ErrorBoundry>\n        <SwapiServiceProvider value={this.swapiService}>\n        <Router>\n          <div className=\"stardb-app\">\n            <Header />\n            <RandomPlanet />\n            <Switch>\n            <Route path=\"/\" \n                    render={() => <h2>Welcome to StarDB</h2>} \n                    exact />\n            <Route path=\"/people/:id?\" component={PeoplePage} />\n            <Route path=\"/planets\" component={PlanetsPage} />\n            <Route path=\"/starships\" exact component={StarshipsPage} />\n            <Route path=\"/starships/:id\" \n                   render={({ match }) => {\n                     const { id } = match.params;\n                     return <StarshipDetails itemId={id} />} \n                   }/>\n            <Route path=\"/login\" \n                   render={() => (\n                     <LoginPage isLoggedIn={isLoggedIn}\n                                onLogin={this.onLogin}/>\n                     )} />\n            <Route path=\"/secret\" \n                   render={() => (\n                     <SecretPage isLoggedIn={isLoggedIn}/>\n                     )} />\n            <Route render={() => <h2>Page not found</h2>} />\n              </ Switch>\n          </div>\n        </ Router>\n        </ SwapiServiceProvider>\n      </ErrorBoundry>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(<App />,\n  document.getElementById('root')); "],"sourceRoot":""}